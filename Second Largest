Second Largest
Difficulty: EasyAccuracy: 26.72%Submissions: 1.3MPoints: 2Average Time: 15m
Given an array of positive integers arr[], return the second largest element from the array. If the second largest element doesn't exist then return -1.

Note: The second largest element should not be equal to the largest element.

Examples:

Input: arr[] = [12, 35, 1, 10, 34, 1]
Output: 34
Explanation: The largest element of the array is 35 and the second largest element is 34.
Input: arr[] = [10, 5, 10]
Output: 5
Explanation: The largest element of the array is 10 and the second largest element is 5.
Input: arr[] = [10, 10, 10]
Output: -1
Explanation: The largest element of the array is 10 and the second largest element does not exist.
Constraints:
2 ≤ arr.size() ≤ 105
1 ≤ arr[i] ≤ 105

Ans -- 
import java.util.Scanner;
class Solution {
    static int getSecondLargest(int[] arr) {
        // code here
        int n =arr.length;
        int lar=-1,sec=-1;
         
        for(int i=0 ;i<n;i++){
            if(arr[i]>lar){
                sec=lar;
                lar=arr[i];
                
            }
            else if (arr[i]<lar&&arr[i]>sec){
                sec=arr[i];
                
            }
            
        }
                return sec;
        
    }
    public static void main(String[] args){
        Scanner obj = new Scanner(System.in);
        int n = obj.nextInt();
        
        int[] arr =new int[n];
        for(int i=0;i<n;i++){
            arr[i]=obj.nextInt();
        }
        // int arr[]=new int[n];
      System.out.println(getSecondLargest(arr));
    
    }
    }
